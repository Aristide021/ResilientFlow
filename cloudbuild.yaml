# ResilientFlow Cloud Build Configuration
# Builds and deploys all agents to Cloud Run

steps:
  # Build protobuf messages
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker run --rm -v "$$PWD:/workspace" -w /workspace \
        namely/protoc-all:1.51_1 \
        -f proto/api.proto -l python -o /workspace

  # Build and push Data Aggregator
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/data-aggregator:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/data-aggregator:latest'
      - '-f'
      - 'agents/aggregator/Dockerfile'
      - '.'
    id: 'build-data-aggregator'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/data-aggregator:$BUILD_ID']
    id: 'push-data-aggregator'
    waitFor: ['build-data-aggregator']

  # Build and push Impact Assessor
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/impact-assessor:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/impact-assessor:latest'
      - '-f'
      - 'agents/assessor/Dockerfile'
      - '.'
    id: 'build-impact-assessor'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/impact-assessor:$BUILD_ID']
    id: 'push-impact-assessor'
    waitFor: ['build-impact-assessor']

  # Build and push Resource Allocator
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/resource-allocator:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/resource-allocator:latest'
      - '-f'
      - 'agents/allocator/Dockerfile'
      - '.'
    id: 'build-resource-allocator'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/resource-allocator:$BUILD_ID']
    id: 'push-resource-allocator'
    waitFor: ['build-resource-allocator']

  # Build and push Communications Coordinator
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/comms-coordinator:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/comms-coordinator:latest'
      - '-f'
      - 'agents/comms/Dockerfile'
      - '.'
    id: 'build-comms-coordinator'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/comms-coordinator:$BUILD_ID']
    id: 'push-comms-coordinator'
    waitFor: ['build-comms-coordinator']

  # Build and push Report Synthesizer
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/report-synthesizer:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/report-synthesizer:latest'
      - '-f'
      - 'agents/reporter/Dockerfile'
      - '.'
    id: 'build-report-synthesizer'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/report-synthesizer:$BUILD_ID']
    id: 'push-report-synthesizer'
    waitFor: ['build-report-synthesizer']

  # Deploy Data Aggregator to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'data-aggregator'
      - '--image=gcr.io/$PROJECT_ID/data-aggregator:$BUILD_ID'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--service-account=resilientflow-agents@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--memory=2Gi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--allow-unauthenticated'
    id: 'deploy-data-aggregator'
    waitFor: ['push-data-aggregator']

  # Deploy Impact Assessor to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'impact-assessor'
      - '--image=gcr.io/$PROJECT_ID/impact-assessor:$BUILD_ID'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--service-account=resilientflow-agents@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--memory=2Gi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--allow-unauthenticated'
    id: 'deploy-impact-assessor'
    waitFor: ['push-impact-assessor']

  # Deploy Resource Allocator to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'resource-allocator'
      - '--image=gcr.io/$PROJECT_ID/resource-allocator:$BUILD_ID'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--service-account=resilientflow-agents@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--memory=2Gi'
      - '--cpu=2'
      - '--min-instances=0'
      - '--max-instances=5'
      - '--allow-unauthenticated'
    id: 'deploy-resource-allocator'
    waitFor: ['push-resource-allocator']

  # Deploy Communications Coordinator to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'comms-coordinator'
      - '--image=gcr.io/$PROJECT_ID/comms-coordinator:$BUILD_ID'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--service-account=resilientflow-agents@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--min-instances=1'
      - '--max-instances=10'
      - '--allow-unauthenticated'
    id: 'deploy-comms-coordinator'
    waitFor: ['push-comms-coordinator']

  # Deploy Report Synthesizer to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'report-synthesizer'
      - '--image=gcr.io/$PROJECT_ID/report-synthesizer:$BUILD_ID'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--service-account=resilientflow-agents@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--memory=2Gi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=5'
      - '--allow-unauthenticated'
    id: 'deploy-report-synthesizer'
    waitFor: ['push-report-synthesizer']

  # Run smoke tests
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üß™ Running smoke tests..."
        
        # Test each service health endpoint
        services=("data-aggregator" "impact-assessor" "resource-allocator" "comms-coordinator" "report-synthesizer")
        
        for service in "$${services[@]}"; do
          echo "Testing $$service..."
          url=$$(gcloud run services describe $$service --region=$_REGION --format="value(status.url)")
          
          if curl -f -s "$$url" > /dev/null; then
            echo "‚úÖ $$service is healthy"
          else
            echo "‚ùå $$service health check failed"
            exit 1
          fi
        done
        
        echo "‚úÖ All services deployed and healthy!"
    id: 'smoke-tests'
    waitFor: 
      - 'deploy-data-aggregator'
      - 'deploy-impact-assessor'
      - 'deploy-resource-allocator'
      - 'deploy-comms-coordinator'
      - 'deploy-report-synthesizer'

# Substitution variables
substitutions:
  _REGION: 'us-central1'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
  
# Build timeout
timeout: '3600s'

# Images to push to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/data-aggregator:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/impact-assessor:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/resource-allocator:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/comms-coordinator:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/report-synthesizer:$BUILD_ID'

# Artifacts to store
artifacts:
  objects:
    location: 'gs://$PROJECT_ID-build-artifacts'
    paths:
      - 'proto/api_pb2.py'
      - 'cloudbuild.yaml' 